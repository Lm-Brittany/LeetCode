题目：给你一个整数数组 nums，请你将该数组升序排列。

代码+思路：
class Solution {
public:
    //归并排序
    vector<int> sortArray(vector<int>& nums){
        mergeSort(nums,0,(int)nums.size()-1);
        return nums;
    }

    void mergeSort(vector<int>& nums,int start,int end){
        if(start < end){
            //拆半成两个小集合，分别进行递归
            int mid  = start + (end - start) / 2;
            mergeSort(nums,start,mid);
            mergeSort(nums,mid+1,end);

            //把两个有序小集合归并成一个大集合
            merge(nums,start,mid,end);
        }
    }

    //把两个有序小集合归并成一个大集合
    void merge(vector<int>& nums,int start,int mid,int end){
        //开辟额外大集合，设置指针
        vector<int> tempArray;
        tempArray.resize(end-start+1);
        int p1 = start, p2 = mid+1, p = 0;

        //比较两个小集合的元素，依次放入大集合中
        while(p1 <= mid && p2 <= end){
            if(nums[p1] < nums[p2]){
                tempArray[p++] = nums[p1++];
            }
            else{
                tempArray[p++] = nums[p2++];
            }
        }

        //左侧小集合还有剩余，依次放入大集合中
        while(p1 <= mid){
            tempArray[p++] = nums[p1++];
        }

        //右侧小集合还有剩余，依次放入大集合中
        while(p2 <= end){
            tempArray[p++] = nums[p2++];
        }

        //将大集合的元素复制到原数组中
        for(int i = 0; i < tempArray.size(); i++){
            nums[i+start] = tempArray[i];
        }
        
    }    

};

题目：给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。

代码 + 思路：
class Solution {
public:
    ListNode* sortList(ListNode* head) {
        // 递归结束条件
        if (head == NULL || head->next == NULL) {
            return head;
        }

        // 找到链表中间节点并断开链表 && 递归下探
        ListNode* midNode = middleNode(head);
        ListNode* rightHead = midNode->next;
        midNode->next = NULL;

        ListNode* left = sortList(head);
        ListNode* right = sortList(rightHead);

        // 当前层业务操作（合并有序链表）
        return mergeTwoLists(left, right);
    }
    
    //  利用快慢指针找到链表中间节点
    ListNode* middleNode(ListNode* head) {
        if (head == NULL || head->next == NULL) {
            return head;
        }
        ListNode* slow = head;
        ListNode* fast = head->next->next;

        while (fast != NULL && fast->next != NULL) {
            slow = slow->next;
            fast = fast->next->next;
        }

        return slow;
    }

    // 合并两个有序链表
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* dummyHead = new ListNode(-1);
        ListNode* r = dummyHead;

        while(l1 && l2) {
            if(l1->val < l2->val) {
                r->next = l1;
                l1 = l1->next;
            } else {
                r->next = l2;
                l2 = l2->next;
            }

            r = r->next;
        }

        r->next = l1 != NULL ? l1 : l2;
        return dummyHead->next;
    }

 };
